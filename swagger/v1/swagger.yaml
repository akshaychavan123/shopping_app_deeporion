---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    bearerAuth2:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/api/v1/landing_page/categories_index":
    get:
      summary: list categories
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/index_with_subcategories_and_products":
    get:
      summary: list index_with_subcategories_and_products
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/products_index":
    get:
      summary: list products
      tags:
      - Landing Page
      parameters:
      - name: id
        in: query
        description: Subcategory ID
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/product_items_index":
    get:
      summary: list product items
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/gift_cards_index":
    get:
      summary: list gift cards
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/product_items_of_product/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/landing_page/product_items_show/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/landing_page/product_items_filter":
    get:
      summary: list and filter product items
      tags:
      - Landing Page
      parameters:
      - name: subcategory_id
        in: query
        description: ID of the subcategory
        schema:
          type: integer
      - name: product_id
        in: query
        description: ID of the product
        schema:
          type: integer
      - name: brand
        in: query
        description: Brand of the product item
        schema:
          type: string
      - name: size
        in: query
        description: Size of the product item
        schema:
          type: string
      - name: color
        in: query
        description: Color of the product item
        schema:
          type: string
      - name: min_price
        in: query
        format: float
        description: Minimum price of the product item
        schema:
          type: number
      - name: max_price
        in: query
        format: float
        description: Maximum price of the product item
        schema:
          type: number
      - name: search
        in: query
        description: Search term for the product item name or description
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/passwords/forgot":
    post:
      summary: Forgot password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
              - email
  "/api/v1/passwords/reset":
    post:
      summary: Reset password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - token
              - password
              - password_confirmation
  "/api/v2/coupons":
    get:
      summary: list coupons
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                promo_code_name:
                  type: string
                promo_code:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                promo_type:
                  type: string
                amount_off:
                  type: number
                  format: float
                max_uses_per_client:
                  type: integer
                max_uses_per_promo:
                  type: integer
                couponable_id:
                  type: integer
                couponable_type:
                  type: string
                image:
                  type: string
                  format: binary
              required:
              - promo_code_name
              - promo_code
              - start_date
              - end_date
              - promo_type
              - amount_off
  "/api/v2/coupons/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the coupon
      required: true
      schema:
        type: integer
    get:
      summary: show coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/gift_cards":
    get:
      summary: list gift_cards
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: file
                price:
                  type: number
                  format: decimal
                gift_card_category_id:
                  type: integer
              required:
              - images
              - price
              - gift_card_category_id
  "/api/v2/gift_cards/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                images:
                  type: array
                  items:
                    type: file
                price:
                  type: number
                  format: decimal
                gift_card_category_id:
                  type: integer
                replace_images:
                  type: string
    delete:
      summary: delete gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v2/product_item_variants":
    post:
      summary: create product_item_variant
      tags:
      - Product Item Variants
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_item_id:
                  type: integer
                color:
                  type: string
                size:
                  type: string
                price:
                  type: number
                quantity:
                  type: integer
                photos:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - product_item_id
              - color
              - size
              - price
              - quantity
  "/api/v2/product_items":
    get:
      summary: list product_items
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                product_id:
                  type: integer
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
                material:
                  type: string
                care:
                  type: string
                product_code:
                  type: string
              required:
              - name
              - brand
              - description
              - product_code
              - product_id
  "/api/v2/product_items/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                brand:
                  type: string
                description:
                  type: string
                material:
                  type: string
                care:
                  type: string
                product_code:
                  type: string
                product_id:
                  type: integer
    delete:
      summary: delete product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v1/auth/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: User logged in
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/create":
    post:
      summary: Creates a user with phone number
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: User created and verification code sent
        '422':
          description: Phone number already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                full_phone_number:
                  type: string
              required:
              - full_phone_number
  "/api/v1/auth/verify":
    post:
      summary: Verifies phone number
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: Phone number verified
        '401':
          description: Expired verification code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                verification_code:
                  type: string
              required:
              - user_id
              - verification_code
  "/api/v1/cart/cart_items":
    get:
      summary: Retrieves cart items
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      responses:
        '200':
          description: cart items found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    quantity:
                      type: integer
                    product_item:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        brand:
                          type: string
                        price:
                          type: number
                        description:
                          type: string
                      required:
                      - id
                      - name
                      - brand
                      - price
                      - description
                  required:
                  - id
                  - quantity
                  - product_item
        '401':
          description: unauthorized
  "/api/v1/cart/cart_items/{id}":
    patch:
      summary: Updates a cart item
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: cart item updated
        '401':
          description: unauthorized
        '422':
          description: invalid params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
              required:
              - quantity
  "/api/v1/cart/cart_items/add_item":
    post:
      summary: Adds an item to the cart
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item added to cart
        '401':
          description: unauthorized
        '404':
          description: product item not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_variant_id:
                  type: integer
              required:
              - product_item_variant_id
  "/api/v1/cart/cart_items/remove_or_move_to_wishlist":
    delete:
      summary: Removes or moves an item to wishlist
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item removed or moved to wishlist
        '401':
          description: unauthorized
        '404':
          description: item not found in cart
        '400':
          description: invalid action type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_variant_id:
                  type: integer
                action_type:
                  type: string
                  enum:
                  - remove
                  - wishlist
              required:
              - product_item_variant_id
              - action_type
  "/api/v1/cart":
    get:
      summary: Retrieves the user's cart
      tags:
      - Carts
      security:
      - bearerAuth: []
      responses:
        '200':
          description: cart found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  cart_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quantity:
                          type: integer
                        product_item:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            brand:
                              type: string
                            price:
                              type: number
                            description:
                              type: string
                          required:
                          - id
                          - name
                          - brand
                          - price
                          - description
                      required:
                      - id
                      - quantity
                      - product_item
                required:
                - id
                - user_id
                - cart_items
        '401':
          description: unauthorized
  "/api/v2/categories":
    get:
      summary: list categories
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v2/categories/{id}":
    parameters:
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: string
    get:
      summary: show category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v2/gift_card_categories":
    get:
      summary: list gift_card_categories
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                gift_card_category:
                  type: object
                  properties:
                    title:
                      type: string
                  required:
                  - title
              required:
              - gift_card_category
  "/api/v2/gift_card_categories/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    delete:
      summary: delete gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v1/orders":
    post:
      summary: Creates an order
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: order created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                first_name:
                  type: string
                last_name:
                  type: string
                phone_number:
                  type: string
                email:
                  type: string
                country:
                  type: string
                pincode:
                  type: string
                area:
                  type: string
                city:
                  type: string
                state:
                  type: string
                address:
                  type: string
                total_price:
                  type: number
                address_type:
                  type: string
                payment_status:
                  type: string
                placed_at:
                  type: string
                  format: date-time
                order_items_attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      product_item_id:
                        type: integer
                      quantity:
                        type: integer
                      sub_total:
                        type: number
              required:
              - first_name
              - last_name
              - phone_number
              - email
              - country
              - pincode
              - area
              - city
              - state
              - address
              - total_price
              - address_type
              - payment_status
              - placed_at
              - order_items_attributes
  "/api/v2/products":
    get:
      summary: list products
      tags:
      - Products
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create product
      tags:
      - Products
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                subcategory_id:
                  type: integer
              required:
              - name
              - subcategory_id
  "/api/v2/products/{id}":
    parameters:
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: integer
    get:
      summary: show product
      tags:
      - Products
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update product
      tags:
      - Products
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete product
      tags:
      - Products
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v1/auth/google_oauth2":
    post:
      summary: Google OAuth2 Authentication
      tags:
      - Sessions
      parameters:
      - name: auth_token
        in: header
        description: OAuth token
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                    required:
                    - id
                    - name
                    - email
                required:
                - jwt
                - user
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
  "/api/v2/categories/{category_id}/subcategories":
    parameters:
    - name: category_id
      in: path
      description: Category ID
      required: true
      schema:
        type: integer
    get:
      summary: list subcategories
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v2/categories/{category_id}/subcategories/{id}":
    parameters:
    - name: category_id
      in: path
      description: Category ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: integer
    get:
      summary: show subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                terms_and_condition:
                  type: boolean
              required:
              - name
              - email
              - password
              - terms_and_condition
  "/api/v1/users/{id}/update_image":
    patch:
      summary: Update user image
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Image updated
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: file
              required:
              - image
  "/api/v1/users/{id}/delete_image":
    delete:
      summary: Delete user image
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Image deleted
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable entity
  "/api/v1/wishlists/{wishlist_id}/wishlist_items":
    post:
      summary: Creates a wishlist item
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: wishlist item created
        '401':
          description: unauthorized
        '422':
          description: invalid params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_variant_id:
                  type: integer
                  description: ID of the product item variant
              required:
              - product_item_variant_id
  "/api/v1/wishlists/:wishlist_id/wishlist_items/{id}":
    delete:
      summary: Deletes a wishlist item
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters:
      - name: wishlist_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: wishlist item deleted
        '401':
          description: unauthorized
  "/api/v1/wishlists/:wishlist_id/wishlist_items/add_to_cart":
    post:
      summary: Moves an item from wishlist to cart
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item added to cart
        '401':
          description: unauthorized
        '404':
          description: item not found in wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_variant_id:
                  type: integer
              required:
              - product_item_variant_id
  "/api/v1/wishlists/show_wishlistitems":
    get:
      summary: show wishlist
      tags:
      - Wishlists
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
