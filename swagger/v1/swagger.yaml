---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    bearerAuth2:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/api/v1/addresses":
    get:
      summary: Retrieves all Addresses
      tags:
      - Addresses
      security:
      - bearerAuth: []
      responses:
        '200':
          description: addresses retrieved
        '401':
          description: unauthorized
    post:
      summary: Creates an Address
      tags:
      - Addresses
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: address created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                phone_number:
                  type: string
                email:
                  type: string
                  format: email
                country:
                  type: string
                pincode:
                  type: string
                area:
                  type: string
                state:
                  type: string
                address:
                  type: string
                city:
                  type: string
                address_type:
                  type: string
                default:
                  type: boolean
              required:
              - first_name
              - last_name
              - phone_number
              - email
              - country
              - pincode
              - area
              - state
              - address
              - city
              - address_type
  "/api/v1/addresses/{id}":
    parameters:
    - name: id
      in: path
      description: Address ID
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Address
      tags:
      - Addresses
      security:
      - bearerAuth: []
      responses:
        '200':
          description: address found
        '404':
          description: address not found
        '401':
          description: unauthorized
    put:
      summary: Updates an Address
      tags:
      - Addresses
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: address updated
        '404':
          description: address not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                first_name:
                  type: string
                last_name:
                  type: string
                phone_number:
                  type: string
                email:
                  type: string
                  format: email
                country:
                  type: string
                pincode:
                  type: string
                area:
                  type: string
                state:
                  type: string
                address:
                  type: string
                city:
                  type: string
                address_type:
                  type: string
                default:
                  type: boolean
    delete:
      summary: Deletes an Address
      tags:
      - Addresses
      security:
      - bearerAuth: []
      responses:
        '200':
          description: address deleted
        '404':
          description: address not found
        '401':
          description: unauthorized
  "/api/v1/card_details":
    get:
      summary: Retrieves Card Detail
      tags:
      - CardDetails
      security:
      - bearerAuth: []
      responses:
        '200':
          description: card details found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    holder_name:
                      type: string
                    card_number:
                      type: string
                    expiry_date:
                      type: string
                    cvv:
                      type: string
                  required:
                  - id
                  - holder_name
                  - card_number
                  - expiry_date
                  - cvv
        '401':
          description: unauthorized
    post:
      summary: Creates Card Details
      tags:
      - CardDetails
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: card detail created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                holder_name:
                  type: string
                card_number:
                  type: string
                expiry_date:
                  type: string
                cvv:
                  type: string
                card_type:
                  type: string
              required:
              - holder_name
              - card_number
              - expiry_date
              - cvv
              - type
    put:
      summary: Updates Card Details
      tags:
      - CardDetails
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: card detail updated
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                holder_name:
                  type: string
                card_number:
                  type: string
                expiry_date:
                  type: string
                cvv:
                  type: string
                card_type:
                  type: string
              required:
              - holder_name
              - card_number
              - expiry_date
              - cvv
              - type
    delete:
      summary: Deletes Card Details
      tags:
      - CardDetails
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: card detail deleted
        '401':
          description: unauthorized
  "/api/v1/card_orders":
    post:
      summary: Creates a new card order
      tags:
      - Card Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: card order created
        '404':
          description: gift card not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                card_order:
                  type: object
                  properties:
                    gift_card_id:
                      type: integer
                    recipient_name:
                      type: string
                    recipient_email:
                      type: string
                      format: email
                    dob:
                      type: string
                      format: date
                    sender_email:
                      type: string
                      format: email
                    message:
                      type: string
                    razorpay_order_id:
                      type: string
                    razorpay_payment_id:
                      type: string
                    payment_status:
                      type: string
                    order_status:
                      type: string
                  required:
                  - gift_card_id
                  - recipient_name
                  - recipient_email
                  - sender_email
              required:
              - card_order
  "/api/v1/card_orders/callback":
    post:
      summary: Verifies payment and updates order status
      tags:
      - Card Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: payment verified and email sent
        '404':
          description: order not found
        '422':
          description: payment failed
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                razorpay_payment_id:
                  type: string
                razorpay_order_id:
                  type: string
              required:
              - razorpay_payment_id
              - razorpay_order_id
  "/api/v1/client_reviews":
    get:
      summary: List all client reviews
      tags:
      - ClientReviews
      parameters:
      - name: page
        in: query
        description: Page number
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        '200':
          description: Client reviews found
    post:
      summary: Create a client review
      tags:
      - ClientReviews
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Client review created
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star:
                  type: integer
                review:
                  type: string
              required:
              - star
              - review
  "/api/v1/client_reviews/{id}":
    put:
      summary: Update a client review
      tags:
      - ClientReviews
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Client review ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Client review updated
        '403':
          description: Unauthorized
        '422':
          description: Invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star:
                  type: integer
                review:
                  type: string
              required:
              - star
              - review
    delete:
      summary: Delete a client review
      tags:
      - ClientReviews
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Client review ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: Client review deleted
        '403':
          description: Unauthorized
        '404':
          description: Review not found
  "/api/v1/contact_us":
    post:
      summary: Creates a Contact Us record
      tags:
      - ContactUs
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: contact_us created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                contact_number:
                  type: string
                subject:
                  type: string
                details:
                  type: string
              required:
              - name
              - email
              - contact_number
              - subject
              - details
  "/api/v1/help_centers":
    get:
      summary: Retrieves all Help Center
      tags:
      - Help Center
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Help Center retrieved
        '401':
          description: unauthorized
    post:
      summary: Creates an Help Center
      tags:
      - Help Center
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: address created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                answer:
                  type: string
                description:
                  type: integer
              required:
              - name
  "/api/v1/help_centers/{id}":
    parameters:
    - name: id
      in: path
      description: HELP CENTER ID
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Help Center
      tags:
      - Help Center
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Help Center found
        '404':
          description: Help Center not found
        '401':
          description: unauthorized
    put:
      summary: Updates an Help Center
      tags:
      - Help Center
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Help Center updated
        '404':
          description: Help Center not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                answer:
                  type: string
                description:
                  type: integer
    delete:
      summary: Deletes an Help Center
      tags:
      - Help Center
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Help Center deleted
        '404':
          description: Help Center not found
        '401':
          description: unauthorized
  "/api/v1/instagramposts":
    get:
      summary: Retrieves all instagram posts
      tags:
      - Instagram
      security:
      - bearerAuth: []
      responses:
        '200':
          description: instagramposts retrieved
        '401':
          description: unauthorized
    post:
      summary: Creates an instagramposts
      tags:
      - Instagram
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: address created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                description:
                  type: string
                image:
                  type: integer
              required:
              - url
  "/api/v1/instagramposts/{id}":
    parameters:
    - name: id
      in: path
      description: Plan ID
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific instagramposts
      tags:
      - Instagram
      security:
      - bearerAuth: []
      responses:
        '200':
          description: instagramposts found
        '404':
          description: instagramposts not found
        '401':
          description: unauthorized
    put:
      summary: Updates an instagramposts
      tags:
      - Instagram
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: instagramposts updated
        '404':
          description: instagramposts not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                description:
                  type: string
                image:
                  type: integer
    delete:
      summary: Deletes an instagramposts
      tags:
      - Instagram
      security:
      - bearerAuth: []
      responses:
        '200':
          description: instagramposts deleted
        '404':
          description: instagramposts not found
        '401':
          description: unauthorized
  "/api/v1/landing_page/categories_index":
    get:
      summary: list categories
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/index_with_subcategories_and_products":
    get:
      summary: list index_with_subcategories_and_products
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/product_items_by_category/{id}":
    get:
      summary: Get product items by category
      tags:
      - Landing Page
      description: Fetches all product items associated with a specific category.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the category to fetch product items for
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
        '404':
          description: category not found
  "/api/v1/landing_page/product_items_by_sub_category/{id}":
    get:
      summary: Get product items by subcategory
      tags:
      - Landing Page
      description: Fetches all product items associated with a specific subcategory.
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: ID of the subcategory to fetch product items for
        required: true
        schema:
          type: integer
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
        '404':
          description: subcategory not found
  "/api/v1/landing_page/product_items_index":
    get:
      summary: list product items
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/gift_cards_index":
    get:
      summary: list gift cards
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/gift_cards_category":
    get:
      summary: list gift_card_categories
      tags:
      - GiftCardCategoriesAll
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/recent_viewed_product_items":
    get:
      summary: list recent viewed product items
      tags:
      - Landing Page
      security:
      - bearerAuth: []
      parameters:
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page for pagination
        schema:
          type: integer
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/gift_cards_by_category/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the GiftCardCategory
      required: true
      schema:
        type: integer
    get:
      summary: list gift_card_categories
      tags:
      - GiftCardByCategories
      responses:
        '200':
          description: successful
  "/api/v1/landing_page/product_items_of_product/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product
      required: true
      schema:
        type: integer
    - name: page
      in: query
      description: Page number for pagination
      schema:
        type: integer
    - name: per_page
      in: query
      description: Number of items per page
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Landing Page
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/landing_page/product_items_show/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Landing Page
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v1/landing_page/product_items_filter":
    get:
      summary: list and filter product items
      tags:
      - Landing Page
      security:
      - bearerAuth: []
      parameters:
      - name: category_id
        in: query
        description: ID of the Category
        required: true
        schema:
          type: integer
      - name: subcategory_ids
        in: query
        items:
          type: integer
        description: IDs of the subcategories
        schema:
          type: array
      - name: product_ids
        in: query
        items:
          type: integer
        description: IDs of the products
        schema:
          type: array
      - name: brands
        in: query
        items:
          type: string
        description: Brands of the product items
        schema:
          type: array
      - name: sizes
        in: query
        items:
          type: string
        description: Sizes of the product items
        schema:
          type: array
      - name: colors
        in: query
        items:
          type: string
        description: Colors of the product items
        schema:
          type: array
      - name: price_ranges
        in: query
        items:
          type: string
        description: Price ranges in the format "min-max"
        schema:
          type: array
      - name: search
        in: query
        description: Search term for the product item name, brand, color, or material
        schema:
          type: string
      - name: sort_by
        in: query
        description: 'Sort for the product item Recommended, What New, Popularity,
          Better Discount, Price:High to Low, Price: Low to High, Customer Rating'
        schema:
          type: string
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        brand:
                          type: string
                        product_id:
                          type: integer
                        price_of_variant:
                          type: number
                          format: float
                        id_of_first_variant:
                          type: integer
                        one_image_of_variant:
                          type: string
                        rating_and_review:
                          type: string
                          nullable: true
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
  "/api/v1/landing_page/new_arrivals":
    get:
      summary: new arrivals
      tags:
      - New Arrivals
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        color:
                          type: string
                        size:
                          type: string
                        price:
                          type: number
                          format: float
                        photos:
                          type: array
                          items:
                            type: string
                        product_item:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            brand:
                              type: string
                            material:
                              type: string
                            created_at:
                              type: string
                              format: date-time
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
  "/api/v1/landing_page/top_category":
    get:
      summary: top category
      tags:
      - Landing Page
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        image:
                          type: string
                          format: uri
                        subcategory:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                          required:
                          - id
                          - name
                      required:
                      - id
                      - name
                      - image
                      - subcategory
                required:
                - data
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
                required:
                - errors
  "/api/v1/landing_page/product_items_search":
    get:
      summary: search product items
      tags:
      - Search API
      security:
      - bearerAuth: []
      parameters:
      - name: search
        in: query
        description: Search term for the product item name, brand, material
        schema:
          type: string
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page for pagination
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        brand:
                          type: string
                        price:
                          type: number
                        rating_and_review:
                          type: string
                          nullable: true
                        image:
                          type: string
                          nullable: true
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      next_page:
                        type: integer
                        nullable: true
                      prev_page:
                        type: integer
                        nullable: true
                      total_pages:
                        type: integer
                      total_count:
                        type: integer
        '404':
          description: not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
  "/api/v1/landing_page/filter_data_for_mobile":
    get:
      summary: filter data for mobile
      tags:
      - Landing Page
      security:
      - bearerAuth: []
      parameters:
      - name: category_id
        in: query
        description: ID of the Category
        schema:
          type: integer
      - name: subcategory_ids
        in: query
        description: Comma-separated list of Subcategory IDs
        schema:
          type: string
      - name: product_ids
        in: query
        description: Comma-separated list of Product IDs to fetch variant names and
          unique colors
        schema:
          type: string
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  categories:
                    type: array
                    items:
                      type: object
                  products:
                    type: array
                    items:
                      type: object
                  unique_colors:
                    type: array
                    items:
                      type: string
                  variant_names:
                    type: array
                    items:
                      type: string
                required:
                - categories
                - subcategories
                - products
                - unique_colors
                - variant_names
        '404':
          description: not found
  "/api/v1/notification/show_notification":
    get:
      summary: Retrieves Notification Settings
      tags:
      - Notifications
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Notification settings retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification:
                    type: object
                    properties:
                      app:
                        type: boolean
                      email:
                        type: boolean
                      sms:
                        type: boolean
                      whatsapp:
                        type: boolean
        '404':
          description: Notification settings not found
        '401':
          description: Unauthorized
  "/api/v1/notification/{id}":
    parameters:
    - name: id
      in: path
      description: Notification ID
      required: true
      schema:
        type: string
    patch:
      summary: Updates Notification Settings
      tags:
      - Notifications
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Notification settings updated successfully
        '422':
          description: Invalid request
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                app:
                  type: boolean
                email:
                  type: boolean
                sms:
                  type: boolean
                whatsapp:
                  type: boolean
              required:
              - app
              - email
              - sms
              - whatsapp
  "/api/v1/passwords/forgot":
    post:
      summary: Forgot password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: Password reset link sent
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '429':
          description: Too Many Requests
        '403':
          description: Unauthorized Access to Admin Email
        '201':
          description: Alert Email Sent to Admin
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                type:
                  type: string
                  enum:
                  - user
                  - admin
                  description: Specifies whether the email is for an admin or a user
              required:
              - email
              - type
  "/api/v1/passwords/reset":
    post:
      summary: Reset password
      tags:
      - Passwords
      parameters: []
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '422':
          description: Unprocessable Entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - token
              - password
              - password_confirmation
  "/api/v1/plans":
    get:
      summary: Retrieves all Plans
      tags:
      - Plans
      security:
      - bearerAuth: []
      responses:
        '200':
          description: plans retrieved
        '401':
          description: unauthorized
    post:
      summary: Creates an Plan
      tags:
      - Plans
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: address created
        '422':
          description: invalid request
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                service:
                  type: string
                amount:
                  type: integer
                frequency:
                  type: string
                discription:
                  type: string
                active:
                  type: boolean
              required:
              - name
  "/api/v1/plans/{id}":
    parameters:
    - name: id
      in: path
      description: Plan ID
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Plan
      tags:
      - Plans
      security:
      - bearerAuth: []
      responses:
        '200':
          description: plan found
        '404':
          description: plan not found
        '401':
          description: unauthorized
    put:
      summary: Updates an Plan
      tags:
      - Plans
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: plan updated
        '404':
          description: plan not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                service:
                  type: string
                amount:
                  type: integer
                frequency:
                  type: string
                discription:
                  type: string
                active:
                  type: boolean
    delete:
      summary: Deletes an Plan
      tags:
      - Plans
      security:
      - bearerAuth: []
      responses:
        '200':
          description: plan deleted
        '404':
          description: plan not found
        '401':
          description: unauthorized
  "/api/v1/returns":
    post:
      summary: Creates a return for an order item
      tags:
      - Returns
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '201':
          description: Return processed successfully
        '404':
          description: Order or item not found
        '422':
          description: Unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_id:
                  type: integer
                  example: 1
                order_item_id:
                  type: integer
                  example: 15
                address_id:
                  type: integer
                  example: 1
                reason:
                  type: string
                  example: Damaged product
                refund_method:
                  type: string
                  example: card
                more_information:
                  type: string
                  example: Product arrived broken.
              required:
              - order_id
              - order_item_id
              - address_id
              - reason
  "/api/v1/review_votes":
    post:
      summary: Create Review Vote
      tags:
      - Review Votes
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                helpful:
                  type: boolean
                review_id:
                  type: integer
              required:
              - helpful
              - review_id
  "/api/v1/reviews":
    post:
      summary: Create Review
      tags:
      - Reviews
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                star:
                  type: integer
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
                videos:
                  type: array
                  items:
                    type: string
                    format: binary
                review:
                  type: string
                product_item_id:
                  type: integer
              required:
              - star
              - review
              - product_item_id
    get:
      summary: List Reviews
      tags:
      - Reviews
      security:
      - bearerAuth: []
      parameters:
      - name: product_item_id
        in: query
        description: Product Item ID
        required: false
        schema:
          type: integer
      - name: filter
        in: query
        description: Filter by popular, latest, or my_reviews
        required: false
        schema:
          type: string
      - name: sort_by
        in: query
        description: positive, negative, recent
        schema:
          type: string
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    user_id:
                      type: integer
                    product_item_id:
                      type: integer
                    star:
                      type: integer
                    review:
                      type: string
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - user_id
                  - product_item_id
                  - star
                  - review
                  - created_at
                  - updated_at
        '404':
          description: not found
  "/api/v1/reviews/{id}":
    put:
      summary: Update Review
      tags:
      - Reviews
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        description: Review ID
        schema:
          type: integer
      responses:
        '200':
          description: updated successfully
        '403':
          description: not authorized
        '404':
          description: not found
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                star:
                  type: integer
                review:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
                videos:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: Delete Review
      tags:
      - Reviews
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        description: Review ID
        schema:
          type: integer
      responses:
        '200':
          description: deleted successfully
        '403':
          description: not authorized
        '404':
          description: not found
  "/api/v1/user_notifications":
    get:
      summary: Retrieves all notifications for the current user
      tags:
      - User Notifications
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Notifications retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    title:
                      type: string
                    body:
                      type: string
                    read:
                      type: boolean
                    created_at:
                      type: string
                      format: datetime
                  required:
                  - id
                  - title
                  - body
                  - read
                  - created_at
        '401':
          description: Unauthorized
  "/api/v1/user_notifications/{id}":
    parameters:
    - name: id
      in: path
      description: Notification ID
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific notification
      tags:
      - User Notifications
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Notification retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  body:
                    type: string
                  read:
                    type: boolean
                  created_at:
                    type: string
                    format: datetime
                required:
                - id
                - title
                - body
                - read
                - created_at
        '404':
          description: Notification not found
        '401':
          description: Unauthorized
  "/api/v1/user_notifications/{id}/mark_as_read":
    patch:
      summary: Marks a notification as read
      tags:
      - User Notifications
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Notification ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Notification marked as read
        '404':
          description: Notification not found
        '401':
          description: Unauthorized
  "/api/v2/about_us":
    get:
      summary: Retrieves all About Us entries
      tags:
      - About Us
      responses:
        '200':
          description: about us found
    post:
      summary: Creates an About Us entry
      tags:
      - About Us
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: about us created
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - heading
              - description
  "/api/v2/about_us/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific About Us entry
      tags:
      - About Us
      responses:
        '200':
          description: about us found
        '404':
          description: about us not found
    put:
      summary: Updates a specific About Us entry
      tags:
      - About Us
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: about us updated
        '422':
          description: invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: Deletes a specific About Us entry
      tags:
      - About Us
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: about us deleted
        '404':
          description: about us not found
  "/api/v2/banners":
    get:
      summary: list banners
      tags:
      - Banners
      responses:
        '200':
          description: successful
    post:
      summary: create banner
      tags:
      - Banners
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
                banner_type:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - heading
              - description
              - banner_type
  "/api/v2/banners/{id}":
    parameters:
    - name: id
      in: path
      banner_type: string
      description: id
      required: true
    get:
      summary: show banner
      tags:
      - Banners
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update banner
      tags:
      - Banners
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
                banner_type:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
    delete:
      summary: delete banner
      tags:
      - Banners
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: banner destroyed successfully
        '404':
          description: not found
  "/api/v2/blogs":
    get:
      summary: Retrieves all blogs
      tags:
      - Blogs
      responses:
        '200':
          description: No blogs found
    post:
      summary: Creates a blog
      tags:
      - Blogs
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Blog created successfully
        '422':
          description: Invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                blog[title]:
                  type: string
                blog[category]:
                  type: string
                blog[card_home_url]:
                  type: string
                  nullable: true
                blog[card_insights_url]:
                  type: string
                  nullable: true
                blog[banner_url]:
                  type: string
                  nullable: true
                blog[body]:
                  type: string
                blog[visibility]:
                  type: boolean
                blog[publish_date]:
                  type: string
                  format: date
                  nullable: true
                blog[publisher_id]:
                  type: integer
                blog[card_home_url_alt]:
                  type: string
                  nullable: true
                blog[card_insights_url_alt]:
                  type: string
                  nullable: true
                blog[banner_url_alt]:
                  type: string
                  nullable: true
                blog[description]:
                  type: string
                  nullable: true
                blog[path_name]:
                  type: string
              required:
              - blog[title]
              - blog[category]
              - blog[body]
              - blog[visibility]
              - blog[publisher_id]
              - blog[path_name]
  "/api/v2/blogs/{path_name}":
    parameters:
    - name: path_name
      in: path
      description: Path name of the blog
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific blog
      tags:
      - Blogs
      responses:
        '200':
          description: Blog details
        '404':
          description: Blog not found
    patch:
      summary: Updates a specific blog
      tags:
      - Blogs
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Blog updated successfully
        '422':
          description: Invalid request
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                blog[title]:
                  type: string
                blog[category]:
                  type: string
                blog[card_home_url]:
                  type: string
                  nullable: true
                blog[card_insights_url]:
                  type: string
                  nullable: true
                blog[banner_url]:
                  type: string
                  nullable: true
                blog[body]:
                  type: string
                blog[visibility]:
                  type: boolean
                blog[publish_date]:
                  type: string
                  format: date
                  nullable: true
                blog[publisher_id]:
                  type: integer
                blog[card_home_url_alt]:
                  type: string
                  nullable: true
                blog[card_insights_url_alt]:
                  type: string
                  nullable: true
                blog[banner_url_alt]:
                  type: string
                  nullable: true
                blog[description]:
                  type: string
                  nullable: true
                blog[path_name]:
                  type: string
    delete:
      summary: Deletes a specific blog
      tags:
      - Blogs
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Blog deleted successfully
        '404':
          description: Blog not found
  "/api/v2/career_roles":
    get:
      summary: List Career Roles
      tags:
      - Career Roles
      parameters:
      - name: q
        in: query
        schema:
          type: object
        description: Ransack query parameters
      - name: items
        in: query
        schema:
          type: integer
        description: Items per page
      responses:
        '200':
          description: List of career roles
          content:
            application/json:
              schema:
                type: object
                properties:
                  career_roles:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        role_name:
                          type: string
                        role_type:
                          type: string
                        location:
                          type: string
                  pagination:
                    type: object
                    properties:
                      count:
                        type: integer
                      pages:
                        type: integer
    post:
      summary: Create Career Role
      tags:
      - Career Roles
      parameters: []
      responses:
        '201':
          description: Career role created
        '422':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role_name:
                  type: string
                role_type:
                  type: string
                location:
                  type: string
                career_id:
                  type: integer
              required:
              - role_name
              - role_type
              - location
              - career_id
  "/api/v2/career_roles/{id}":
    parameters:
    - name: id
      in: path
      description: Career Role ID
      required: true
      schema:
        type: integer
    get:
      summary: Show Career Role
      tags:
      - Career Roles
      responses:
        '200':
          description: Career role found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  role_name:
                    type: string
                  role_type:
                    type: string
                  location:
                    type: string
        '404':
          description: Career role not found
    put:
      summary: Update Career Role
      tags:
      - Career Roles
      parameters: []
      responses:
        '200':
          description: Career role updated
        '422':
          description: Invalid input
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                role_name:
                  type: string
                role_type:
                  type: string
                location:
                  type: string
                career_id:
                  type: integer
    delete:
      summary: Delete Career Role
      tags:
      - Career Roles
      responses:
        '204':
          description: Career role deleted
  "/api/v2/careers":
    get:
      summary: Retrieves all Careers
      tags:
      - Careers
      responses:
        '200':
          description: careers found
    post:
      summary: Creates a Career
      tags:
      - Careers
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: career created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  type: string
                career_roles_attributes:
                  type: array
                  items:
                    type: object
                    properties:
                      role_name:
                        type: string
                      role_type:
                        type: string
                      location:
                        type: string
                      role_overview:
                        type: string
                      key_responsibility:
                        type: string
                      requirements:
                        type: string
                      email_id:
                        type: string
                    required:
                    - role_name
                    - role_type
                    - location
                    - role_overview
                    - key_responsibility
                    - requirements
                    - email_id
              required:
              - header
  "/api/v2/careers/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Career
      tags:
      - Careers
      responses:
        '200':
          description: career found
        '404':
          description: career not found
    put:
      summary: Updates a specific Career
      tags:
      - Careers
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: career updated
        '404':
          description: career not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                header:
                  type: string
    delete:
      summary: Deletes a specific Career
      tags:
      - Careers
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: career deleted
        '404':
          description: career not found
  "/api/v2/client_review_comments":
    get:
      summary: list client_review_comments
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      description: Fetch all client reviews with their comments
      parameters:
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of items per page
        schema:
          type: integer
      - name: filter
        in: query
        description: positive, negative, recent, hidden
        schema:
          type: string
      responses:
        '200':
          description: successful
        '401':
          description: unauthorized
        '500':
          description: internal server error
    post:
      summary: create client_review_comment
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '404':
          description: review not found
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                client_review_id:
                  type: integer
                comment:
                  type: string
              required:
              - client_review_id
              - comment
  "/api/v2/client_review_comments/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the client review comment
      required: true
      schema:
        type: integer
    patch:
      summary: update client_review_comment
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '404':
          description: not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  type: string
              required:
              - comment
    delete:
      summary: destroy client_review_comment
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/client_review_comments/{id}/delete_review":
    parameters:
    - name: id
      in: path
      description: ID of the client review
      required: true
      schema:
        type: integer
    delete:
      summary: destroy delete_review
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/client_review_comments/{id}/hide_review":
    parameters:
    - name: id
      in: path
      description: ID of the client review
      required: true
      schema:
        type: integer
    patch:
      summary: hide review
      tags:
      - Client Review Comments
      security:
      - bearerAuth2: []
      description: Soft delete (hide) a client review by setting the deleted_at timestamp
      responses:
        '200':
          description: review hide successfully
        '404':
          description: review not found
        '401':
          description: unauthorized
  "/api/v2/contact_us_manage":
    get:
      summary: Retrieve all ContactUs entries
      tags:
      - ContactUs Management
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: ContactUs list retrieved successfully
        '401':
          description: Unauthorized
  "/api/v2/contact_us_manage/{id}":
    get:
      summary: Retrieve a specific ContactUs entry
      tags:
      - ContactUs Management
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: ContactUs ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ContactUs entry retrieved successfully
        '404':
          description: ContactUs entry not found
        '401':
          description: Unauthorized
    patch:
      summary: Update a specific ContactUs entry
      tags:
      - ContactUs Management
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: ContactUs ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: ContactUs entry updated successfully
        '404':
          description: ContactUs entry not found
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contact_us:
                  type: object
                  properties:
                    status:
                      type: string
                      example: resolved
                    comment:
                      type: string
                      example: Resolved successfully
                  required:
                  - status
    delete:
      summary: Delete a specific ContactUs entry
      tags:
      - ContactUs Management
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: ContactUs ID
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: ContactUs entry deleted successfully
        '404':
          description: ContactUs entry not found
        '401':
          description: Unauthorized
  "/api/v2/coupons":
    get:
      summary: list coupons
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                promo_code_name:
                  type: string
                promo_code:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                promo_type:
                  type: string
                  enum:
                  - discount_on_product
                  - discount_on_amount
                discount_type:
                  type: string
                  enum:
                  - amount
                  - percentage
                max_purchase:
                  type: number
                amount_off:
                  type: number
                  format: float
                max_uses_per_client:
                  type: integer
                max_uses_per_promo:
                  type: integer
                product_ids:
                  type: array
                  items:
                    type: integer
                image:
                  type: string
                  format: binary
              required:
              - promo_code_name
              - promo_code
              - start_date
              - end_date
              - promo_type
              - amount_off
              - discount_type
  "/api/v2/coupons/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the coupon
      required: true
      schema:
        type: integer
    get:
      summary: show coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    put:
      summary: update coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                promo_code_name:
                  type: string
                promo_code:
                  type: string
                start_date:
                  type: string
                  format: date
                end_date:
                  type: string
                  format: date
                promo_type:
                  type: string
                  enum:
                  - discount_on_product
                  - discount_on_amount
                discount_type:
                  type: string
                  enum:
                  - amount
                  - percentage
                max_purchase:
                  type: number
                amount_off:
                  type: number
                  format: float
                max_uses_per_client:
                  type: integer
                max_uses_per_promo:
                  type: integer
                product_ids:
                  type: array
                  items:
                    type: integer
                image:
                  type: string
                  format: binary
              required:
              - promo_code_name
              - promo_code
              - start_date
              - end_date
              - promo_type
              - amount_off
              - discount_type
    delete:
      summary: delete coupon
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v2/coupons/{id}/product_list":
    parameters:
    - name: id
      in: path
      description: ID of the coupon
      required: true
      schema:
        type: integer
    get:
      summary: list associated products
      tags:
      - Coupons
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/exchange_return_policies":
    get:
      summary: Retrieves all Exchange & Return Policies
      tags:
      - Exchange & Return Policies
      responses:
        '200':
          description: exchange_return_policy found
    post:
      summary: Creates an Exchange & Return Policy
      tags:
      - Exchange & Return Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: exchange_return_policy created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
              required:
              - heading
              - description
  "/api/v2/exchange_return_policies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Exchange & Return Policy
      tags:
      - Exchange & Return Policies
      responses:
        '200':
          description: exchange_return_policy found
        '404':
          description: exchange_return_policy not found
    put:
      summary: Updates a specific Exchange & Return Policy
      tags:
      - Exchange & Return Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: exchange_return_policy updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
              required:
              - heading
              - description
    delete:
      summary: Deletes a specific Exchange & Return Policy
      tags:
      - Exchange & Return Policies
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: exchange_return_policy deleted
        '404':
          description: exchange_return_policy not found
        '422':
          description: cannot delete exchange_return_policy
  "/api/v2/gift_cards":
    get:
      summary: list gift_cards
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
                price:
                  type: number
                  format: decimal
                gift_card_category_id:
                  type: integer
              required:
              - name
              - price
              - gift_card_category_id
  "/api/v2/gift_cards/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
                price:
                  type: number
                  format: decimal
                gift_card_category_id:
                  type: integer
                replace_images:
                  type: string
    delete:
      summary: delete gift_card
      tags:
      - GiftCards
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v2/image_uploaders":
    get:
      summary: Get all images
      tags:
      - Image Uploaders
      responses:
        '200':
          description: images found
        '404':
          description: images not found
    post:
      summary: Create an image uploader
      tags:
      - Image Uploaders
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: image uploader created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                images[]:
                  type: array
                  items:
                    type: string
                    format: binary
              required:
              - name
  "/api/v2/image_uploaders/images_by_name":
    get:
      summary: Get images by name
      tags:
      - Image Uploaders
      parameters:
      - name: name
        in: query
        description: Image name
        schema:
          type: string
      responses:
        '200':
          description: images found
        '404':
          description: images not found
  "/api/v2/image_uploaders/{id}":
    get:
      summary: Retrieve an image uploader by ID
      tags:
      - Image Uploaders
      parameters:
      - name: id
        in: path
        description: ImageUploader ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: image uploader found
        '404':
          description: image uploader not found
    delete:
      summary: Delete an image uploader by ID
      tags:
      - Image Uploaders
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: ImageUploader ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: image uploader deleted
        '404':
          description: image uploader not found
  "/api/v2/privacy_policies":
    get:
      summary: list privacy policies
      tags:
      - Privacy Policies
      responses:
        '200':
          description: successful
    post:
      summary: create privacy policy
      tags:
      - Privacy Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy_policy:
                  type: object
                  properties:
                    heading:
                      type: string
                    description:
                      type: string
                  required:
                  - heading
                  - description
  "/api/v2/privacy_policies/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the privacy policy
      required: true
      schema:
        type: string
    get:
      summary: show privacy policy
      tags:
      - Privacy Policies
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update privacy policy
      tags:
      - Privacy Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: updated
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy_policy:
                  type: object
                  properties:
                    heading:
                      type: string
                    description:
                      type: string
    delete:
      summary: delete privacy policy
      tags:
      - Privacy Policies
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v2/product_item_variants":
    post:
      summary: create product_item_variant
      tags:
      - Product Item Variants
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                price:
                  type: number
                size:
                  type: string
                quantity:
                  type: number
                product_item_id:
                  type: integer
                in_stock:
                  type: boolean
              required:
              - size
              - quantity
              - product_item_id
              - price
  "/api/v2/product_item_variants/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    patch:
      summary: update product_item_variants
      tags:
      - Product Item Variants
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                price:
                  type: number
                size:
                  type: string
                quantity:
                  type: number
                product_item_id:
                  type: integer
                in_stock:
                  type: boolean
  "/api/v2/product_items":
    get:
      summary: list product_items
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: file
                photos:
                  type: array
                  items:
                    type: string
                    format: binary
                product_id:
                  type: integer
                name:
                  type: string
                brand:
                  type: string
                price:
                  type: number
                discounted_price:
                  type: decimal
                description:
                  type: text
                material:
                  type: string
                care:
                  type: string
                product_code:
                  type: string
                care_instructions:
                  type: text
                fabric:
                  type: string
                hemline:
                  type: string
                neck:
                  type: string
                texttile_thread:
                  type: string
                size_and_fit:
                  type: text
                height:
                  type: text
                main_trend:
                  type: string
                knite_or_woven:
                  type: string
                length:
                  type: string
                occasion:
                  type: string
                color:
                  type: string
              required:
              - image
              - photos
              - name
              - description
              - product_id
              - color
  "/api/v2/product_items/admin_product_list/{product_id}":
    parameters:
    - name: product_id
      in: path
      description: ID of the product
      required: true
      schema:
        type: integer
    get:
      summary: list filtered products items
      tags:
      - Product Items
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/product_items/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the product item
      required: true
      schema:
        type: integer
    get:
      summary: retrieve product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: file
                photos:
                  type: array
                  items:
                    type: string
                    format: binary
                product_id:
                  type: integer
                name:
                  type: string
                brand:
                  type: string
                price:
                  type: number
                discounted_price:
                  type: decimal
                description:
                  type: text
                material:
                  type: string
                care:
                  type: string
                product_code:
                  type: string
                care_instructions:
                  type: text
                fabric:
                  type: string
                hemline:
                  type: string
                neck:
                  type: string
                texttile_thread:
                  type: string
                size_and_fit:
                  type: text
                height:
                  type: text
                main_trend:
                  type: string
                knite_or_woven:
                  type: string
                length:
                  type: string
                occasion:
                  type: string
                color:
                  type: string
                in_stock:
                  type: boolean
    delete:
      summary: delete product_item
      tags:
      - Product Items
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v2/product_review_manage":
    get:
      summary: list reviews
      tags:
      - Admin Reviews
      parameters:
      - name: category_id
        in: query
        description: Category ID
        schema:
          type: integer
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: category not found
  "/api/v2/product_review_manage/{id}":
    delete:
      summary: delete review
      tags:
      - Admin Reviews
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: Review ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: review deleted successfully
        '404':
          description: review not found
  "/api/v2/product_review_manage/{id}/hide_review":
    patch:
      summary: hide review
      tags:
      - Admin Reviews
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: Review ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: review hidden successfully
        '404':
          description: review not found
  "/api/v2/product_review_manage/{id}/product_reviews":
    get:
      summary: fetch product reviews
      tags:
      - Admin Reviews
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: Product Item ID
        required: true
        schema:
          type: integer
      - name: sort_by
        in: query
        description: Sort reviews by criteria (positive, negative, recent, hidden)
        schema:
          type: string
      - name: page
        in: query
        description: Page number for pagination
        schema:
          type: integer
      - name: per_page
        in: query
        description: Number of reviews per page
        schema:
          type: integer
      responses:
        '200':
          description: successful
        '404':
          description: product item not found
  "/api/v2/shipping_policies":
    get:
      summary: Retrieves all Shipping Policies
      tags:
      - Shipping Policies
      responses:
        '200':
          description: shipping_policy found
    post:
      summary: Creates a Shipping Policy
      tags:
      - Shipping Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: shipping_policy created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
              required:
              - heading
              - description
  "/api/v2/shipping_policies/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Shipping Policy
      tags:
      - Shipping Policies
      responses:
        '200':
          description: shipping_policy found
        '404':
          description: shipping_policy not found
    put:
      summary: Updates a specific Shipping Policy
      tags:
      - Shipping Policies
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: shipping_policy updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                heading:
                  type: string
                description:
                  type: string
              required:
              - heading
              - description
    delete:
      summary: Deletes a specific Shipping Policy
      tags:
      - Shipping Policies
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: shipping_policy deleted
        '404':
          description: shipping_policy not found
        '422':
          description: cannot delete shipping_policy
  "/api/v2/terms_and_conditions":
    get:
      summary: Retrieves all terms and conditions
      tags:
      - TermsAndConditions
      responses:
        '200':
          description: terms and conditions found
    post:
      summary: Creates a terms and condition
      tags:
      - TermsAndConditions
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: terms and condition created
        '422':
          description: invalid request
        '403':
          description: Unauthorized access
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
              required:
              - description
  "/api/v2/terms_and_conditions/{id}":
    get:
      summary: Retrieves a terms and condition
      tags:
      - TermsAndConditions
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: terms and condition found
        '404':
          description: terms and condition not found
    put:
      summary: Updates a terms and condition
      tags:
      - TermsAndConditions
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: terms and condition updated
        '404':
          description: terms and condition not found
        '422':
          description: invalid request
        '403':
          description: Unauthorized access
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
              required:
              - description
    delete:
      summary: Deletes a terms and condition
      tags:
      - TermsAndConditions
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: terms and condition deleted
        '404':
          description: terms and condition not found
        '403':
          description: Unauthorized access
  "/api/v2/video_descriptions":
    get:
      summary: list video descriptions
      tags:
      - VideoDescriptions
      responses:
        '200':
          description: successful
    post:
      summary: create video description
      tags:
      - VideoDescriptions
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
              required:
              - description
  "/api/v2/video_descriptions/{id}":
    parameters:
    - name: id
      in: path
      description: ID of the video description
      required: true
      schema:
        type: integer
    get:
      summary: show video description
      tags:
      - VideoDescriptions
      responses:
        '200':
          description: successful
        '404':
          description: not found
    patch:
      summary: update video description
      tags:
      - VideoDescriptions
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  type: string
    delete:
      summary: delete video description
      tags:
      - VideoDescriptions
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
  "/api/v2/video_libraries":
    get:
      summary: Retrieves all Video Libraries
      tags:
      - Video Libraries
      responses:
        '200':
          description: video_library found
    post:
      summary: Creates a Video Library
      tags:
      - Video Libraries
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: video_library created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video_link:
                  type: string
                video_description_id:
                  type: integer
              required:
              - video_link
              - video_description_id
  "/api/v2/video_libraries/{id}":
    parameters:
    - name: id
      in: path
      required: true
      schema:
        type: string
    get:
      summary: Retrieves a specific Video Library
      tags:
      - Video Libraries
      responses:
        '200':
          description: video_library found
        '404':
          description: video_library not found
    put:
      summary: Updates a specific Video Library
      tags:
      - Video Libraries
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: video_library updated
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                video_link:
                  type: string
                video_description_id:
                  type: integer
              required:
              - video_link
              - video_description_id
    delete:
      summary: Deletes a specific Video Library
      tags:
      - Video Libraries
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: video_library deleted
        '404':
          description: video_library not found
        '422':
          description: cannot delete video_library
  "/api/v1/auth/login":
    post:
      summary: Logs in a user
      tags:
      - Authentication
      parameters: []
      responses:
        '200':
          description: User logged in
        '401':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                device_token:
                  type: string
                device_type:
                  type: string
              required:
              - email
              - password
  "/api/v1/auth/create":
    post:
      summary: Creates a user with phone number
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: User created and verification code sent
        '422':
          description: Phone number already exists
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                full_phone_number:
                  type: string
              required:
              - full_phone_number
  "/api/v1/auth/verify":
    post:
      summary: Verifies phone number
      tags:
      - Authentication
      parameters: []
      responses:
        '201':
          description: Phone number verified
        '401':
          description: Expired verification code
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                verification_code:
                  type: string
              required:
              - user_id
              - verification_code
  "/api/v1/cart/cart_items":
    get:
      summary: Retrieves cart items
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      responses:
        '200':
          description: cart items found
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    quantity:
                      type: integer
                    product_item:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        brand:
                          type: string
                        price:
                          type: number
                        description:
                          type: string
                      required:
                      - id
                      - name
                      - brand
                      - price
                      - description
                  required:
                  - id
                  - quantity
                  - product_item
        '401':
          description: unauthorized
  "/api/v1/cart/cart_items/{id}":
    patch:
      summary: Updates a cart item
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: cart item updated
        '401':
          description: unauthorized
        '422':
          description: invalid params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: integer
                product_item_variant_id:
                  type: integer
              required:
              - quantity
              - product_item_variant_id
  "/api/v1/cart/cart_items/add_item":
    post:
      summary: Adds an item to the cart
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item added to cart
        '401':
          description: unauthorized
        '404':
          description: product item not found
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_id:
                  type: integer
                product_item_variant_id:
                  type: integer
              required:
              - product_item_id
              - product_item_variant_id
  "/api/v1/cart/cart_items/remove_or_move_to_wishlist":
    delete:
      summary: Removes or moves an item to wishlist
      tags:
      - Cart Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item removed or moved to wishlist
        '401':
          description: unauthorized
        '404':
          description: item not found in cart
        '400':
          description: invalid action type
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_id:
                  type: integer
                action_type:
                  type: string
                  enum:
                  - remove
                  - wishlist
              required:
              - product_item_id
              - action_type
  "/api/v1/cart":
    get:
      summary: Retrieves the user's cart
      tags:
      - Carts
      security:
      - bearerAuth: []
      responses:
        '200':
          description: cart found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  user_id:
                    type: integer
                  cart_items:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        quantity:
                          type: integer
                        product_item:
                          type: object
                          properties:
                            id:
                              type: integer
                            name:
                              type: string
                            brand:
                              type: string
                            price:
                              type: number
                            description:
                              type: string
                          required:
                          - id
                          - name
                          - brand
                          - price
                          - description
                      required:
                      - id
                      - quantity
                      - product_item
                required:
                - id
                - user_id
                - cart_items
        '401':
          description: unauthorized
  "/api/v1/cart/discount_on_amount_coupons":
    get:
      summary: List coupons with optional search by coupon code
      tags:
      - Carts
      security:
      - bearerAuth: []
      parameters:
      - name: coupon_code
        in: query
        description: Search by coupon code
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/cart/apply_coupon":
    post:
      summary: Applies a coupon to the cart
      tags:
      - Carts
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Coupon applied successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  order_summary:
                    type: object
                    properties:
                      subtotal:
                        type: number
                      discount:
                        type: number
                      taxes:
                        type: number
                      delivery_charge:
                        type: number
                      total:
                        type: number
                    required:
                    - subtotal
                    - discount
                    - taxes
                    - delivery_charge
                    - total
                required:
                - message
                - order_summary
        '422':
          description: Coupon is invalid or expired
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
        '404':
          description: Coupon not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                promo_code:
                  type: string
                  description: Coupon promo code
              required:
              - promo_code
  "/api/v2/categories":
    get:
      summary: list categories
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v2/categories/{id}":
    parameters:
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: string
    get:
      summary: show category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete category
      tags:
      - Categories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v2/gift_card_categories":
    get:
      summary: list gift_card_categories
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
              required:
              - title
  "/api/v2/gift_card_categories/{id}":
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
    get:
      summary: show gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
    delete:
      summary: delete gift_card_category
      tags:
      - GiftCardCategories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
  "/api/v1/order_items":
    get:
      summary: list order items
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      parameters:
      - name: status
        in: query
        description: Filter by multiple statuses (comma-separated). (e.g., pending,
          out_for_delivery, delivered, cancelled)
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/order_items/pending_orders/{status}":
    parameters:
    - name: status
      in: path
      required: true
      schema:
        type: string
    get:
      summary: list pending items
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
  "/api/v1/order_items/order_count":
    get:
      summary: list order counts
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      parameters:
      - name: start_date
        in: query
        format: date
        required: false
        description: 'Start date for filtering orders (format: YYYY-MM-DD)'
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        description: 'End date for filtering orders (format: YYYY-MM-DD)'
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/order_items/order_status_graph":
    get:
      summary: order status graph details
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      parameters:
      - name: start_date
        in: query
        required: false
        description: 'Start date for the filter (format: DD/MM/YYYY)'
        schema:
          type: string
      - name: end_date
        in: query
        required: false
        description: 'End date for the filter (format: DD/MM/YYYY)'
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/order_items/{id}":
    parameters:
    - name: id
      in: path
      description: order item ID
      required: true
      schema:
        type: string
    put:
      summary: update order item
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '404':
          description: order item not found
        '422':
          description: unprocessable entity
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
              required:
              - status
    delete:
      summary: Deletes an order item
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: order deleted
        '404':
          description: order item not found
        '401':
          description: unauthorized
  "/api/v1/order_items/revenue_graph":
    get:
      summary: revenue graph details
      tags:
      - Order Items
      security:
      - bearerAuth2: []
      parameters:
      - name: start_date
        in: query
        format: date
        required: false
        description: 'Start date for filtering orders (format: YYYY-MM-DD)'
        schema:
          type: string
      - name: end_date
        in: query
        format: date
        required: false
        description: 'End date for filtering orders (format: YYYY-MM-DD)'
        schema:
          type: string
      responses:
        '200':
          description: successful
  "/api/v1/orders":
    post:
      summary: Creates an order and generates Razorpay order
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: Order created successfully
        '422':
          description: Invalid request
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                total_price:
                  type: number
                address_id:
                  type: integer
                coupon_id:
                  type: integer
              required:
              - total_price
              - address_id
              - order_items_attributes
  "/api/v1/orders/callback":
    post:
      summary: Handles Razorpay payment callback
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Payment successful
        '422':
          description: Payment verification failed
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                razorpay_payment_id:
                  type: string
                razorpay_order_id:
                  type: string
                order_id:
                  type: integer
              required:
              - razorpay_payment_id
              - razorpay_order_id
              - order_id
  "/api/v1/orders/cancel":
    post:
      summary: Cancel Order
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: query
        description: Order ID
        schema:
          type: integer
      responses:
        '200':
          description: Order canceled successfully
        '422':
          description: Order cannot be canceled
        '404':
          description: Order not found
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                order_item_id:
                  type: integer
                reason:
                  type: string
                  description: Please write a reason for cancel order
                more_information:
                  type: string
                  description: More Information
              required:
              - order_item_id
              - reason
  "/api/v1/orders/exchange_order":
    post:
      summary: Handles exchange request for an order item
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: order_id
        in: query
        description: Order ID
        required: true
        schema:
          type: integer
      - name: order_item_id
        in: query
        description: Order Item ID
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Exchange request created successfully
        '404':
          description: Order or Order Item not found
        '422':
          description: Exchange already in process or cannot be exchanged
        '401':
          description: Unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
                  description: Reason for exchange request
                more_information:
                  type: string
                  description: Additional information for the exchange
              required:
              - reason
  "/api/v1/orders/order_history":
    get:
      summary: Retrieves the order history for the current user
      tags:
      - Orders
      security:
      - bearerAuth: []
      responses:
        '200':
          description: order history found
        '404':
          description: no orders found
        '401':
          description: unauthorized
  "/api/v1/orders/order_item_details":
    get:
      summary: Fetch order item details
      tags:
      - Orders
      security:
      - bearerAuth: []
      parameters:
      - name: order_id
        in: query
        required: true
        description: Order ID
        schema:
          type: integer
      - name: order_item_id
        in: query
        required: true
        description: Order Item ID
        schema:
          type: integer
      responses:
        '200':
          description: Order item details retrieved successfully
        '404':
          description: Order item not found
        '401':
          description: Unauthorized
  "/api/v2/products":
    get:
      summary: list products
      tags:
      - Products
      responses:
        '200':
          description: successful
    post:
      summary: create product
      tags:
      - Products
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                subcategory_id:
                  type: integer
                image:
                  type: file
              required:
              - image
              - name
              - subcategory_id
  "/api/v2/products/{id}":
    parameters:
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: integer
    get:
      summary: show product
      tags:
      - Products
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update product
      tags:
      - Products
      security:
      - bearerAuth2: []
      parameters:
      - name: id
        in: path
        description: ID of the product to update
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                subcategory_id:
                  type: integer
                image:
                  type: file
              required:
              - name
    delete:
      summary: delete product
      tags:
      - Products
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v1/auth/google_oauth2":
    post:
      summary: Google OAuth2 Authentication
      tags:
      - Sessions
      parameters: []
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  jwt:
                    type: string
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      email:
                        type: string
                    required:
                    - id
                    - name
                    - email
                required:
                - jwt
                - user
        '422':
          description: unprocessable entity
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                required:
                - error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id_token:
                  type: string
              required:
              - id_token
  "/api/v2/categories/{category_id}/subcategories":
    parameters:
    - name: category_id
      in: path
      description: Category ID
      required: true
      schema:
        type: integer
    get:
      summary: list subcategories
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
    post:
      summary: create subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '201':
          description: created
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
  "/api/v2/categories/{category_id}/subcategories/{id}":
    parameters:
    - name: category_id
      in: path
      description: Category ID
      required: true
      schema:
        type: integer
    - name: id
      in: path
      description: ID
      required: true
      schema:
        type: integer
    get:
      summary: show subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
    patch:
      summary: update subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      parameters: []
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '401':
          description: unauthorized
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
              - name
    delete:
      summary: delete subcategory
      tags:
      - Subcategories
      security:
      - bearerAuth2: []
      responses:
        '204':
          description: no content
        '404':
          description: not found
        '401':
          description: unauthorized
  "/api/v1/users":
    post:
      summary: Creates a user
      tags:
      - Users
      parameters: []
      responses:
        '201':
          description: user created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                terms_and_condition:
                  type: boolean
              required:
              - name
              - email
              - password
              - terms_and_condition
  "/api/v1/users/{id}/update_image":
    patch:
      summary: Update user image
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Image updated
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: file
              required:
              - image
  "/api/v1/users/{id}/delete_image":
    delete:
      summary: Delete user image
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Image deleted
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable entity
  "/api/v1/users/{id}/update_profile":
    patch:
      summary: Update user profile
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Profile updated
        '401':
          description: Unauthorized
        '422':
          description: Invalid params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                bio:
                  type: string
                facebook_link:
                  type: string
                linkedin_link:
                  type: string
                instagram_link:
                  type: string
                youtube_link:
                  type: string
                twitter_link:
                  type: string
                google_link:
                  type: string
  "/api/v1/users/{id}/show_profile":
    get:
      summary: Show User Profile
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Profile data
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable entity
  "/api/v1/users/user_details":
    get:
      summary: Show User user_details
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: Profile data
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable entity
  "/api/v1/users/{id}":
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: User ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Account deleted
        '422':
          description: Account not found
        '401':
          description: Unauthorized
  "/api/v1/users/update_password":
    patch:
      summary: Update user password
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Password updated successfully
        '401':
          description: Current password is incorrect
        '422':
          description: Validation errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                current_password:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
              required:
              - current_password
              - password
              - password_confirmation
  "/api/v1/users/update_personal_details":
    patch:
      summary: Update user personal details
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: Personal details updated successfully
        '422':
          description: Validation errors
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone_number:
                  type: string
              required:
              - name
              - email
              - phone_number
  "/api/v1/wishlists/{wishlist_id}/wishlist_items":
    post:
      summary: Creates a wishlist item
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '201':
          description: wishlist item created
        '401':
          description: unauthorized
        '422':
          description: invalid params
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_id:
                  type: integer
                  description: ID of the product item
              required:
              - product_item_id
  "/api/v1/wishlists/:wishlist_id/wishlist_items/{id}":
    delete:
      summary: Deletes a wishlist item
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: wishlist item deleted
        '401':
          description: unauthorized
  "/api/v1/wishlists/:wishlist_id/wishlist_items/add_to_cart":
    post:
      summary: Moves an item from wishlist to cart
      tags:
      - Wishlist Items
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: item added to cart
        '401':
          description: unauthorized
        '404':
          description: item not found in wishlist
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                product_item_id:
                  type: integer
                product_item_variant_id:
                  type: integer
                  nullable: true
              required:
              - product_item_id
  "/api/v1/wishlists/show_wishlistitems":
    get:
      summary: show wishlist
      tags:
      - Wishlists
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
        '404':
          description: not found
        '401':
          description: unauthorized
servers:
- url: http://{localhost}
  variables:
    localhost:
      default: localhost:3000
- url: https://{herokuhost}
  variables:
    herokuhost:
      default: app-like-pinklay-staging-fce0b804f3ce.herokuapp.com/
